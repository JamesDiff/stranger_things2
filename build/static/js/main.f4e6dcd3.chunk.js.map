{"version":3,"sources":["Api/index.js","components/login.jsx","components/newPost.jsx","components/Search.jsx","components/posts.jsx","components/singlePost.jsx","components/updatePost.jsx","components/sendMessage.jsx","components/userObject.jsx","index.js"],"names":["fetchObject","headers","a","fetch","then","response","json","result","catch","console","error","data","fetchPosts","posts","findPost","postId","log","myPost","find","post","_id","postIdToDelete","storedToken","method","makeHeader","token","temporaryHeader","login","userName","passWord","body","JSON","stringify","user","username","password","localStorage","setItem","register","setToken","confirmedPassword","alert","Login","match","setHeader","setUser","useState","setUserName","setPassword","setConfirmedPassword","history","useHistory","onSubmit","e","preventDefault","newToken","url","newHeader","newUser","push","className","type","value","onChange","target","id","placeholder","to","NewPost","setPosts","title","setTitle","description","setDescription","price","setPrice","event","willDeliver","setFilteredResults","searchTerm","setSearchTerm","myFilteredPosts","toLowerCase","filter","index","includes","filterPosts","Posts","setSelectedPost","filteredResults","Search","map","onClick","deletePost","newSelectedPost","SinglePost","selectedPost","useEffect","foundPost","params","UpdatePost","setPostId","handleSubmit","newPosts","post_id","setBody","SendMessage","message","setMessage","content","RenderUserObject","isLoggedIn","storesToken","messages","fromUser","App","header","results","getItem","currentUser","removeItem","path","render","routeProps","exact","routerProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f4e6dcd3.chunk.js","sourcesContent":["export async function fetchObject(headers){\n    const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/users/me', {\n        headers,\n      }).then(response => response.json())\n        .then(result => {\n          return result;\n        })\n        .catch(console.error);\n        return response.data;\n}\n\n\nexport async function fetchPosts(){\n    try{\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts');\n        const result = await response.json();\n        return result.data.posts;\n    } catch (error){\n        console.error(error);\n    }\n}\n\n\nexport function findPost(postId, posts){\n    console.log(\"this is the \", postId)\n    const myPost = posts.find(post => post._id === postId);\n    //return posts.find(post => post._id === postId);\n    console.log(\"This is \", myPost);\n    return myPost ? myPost : {}\n}\n\n/*export async function editPost(postIdToEdit, storedToken){\n    console.log('post id to edit', postIdToEdit);\n    const response = await fetch('http://strangers-things.herokuapp.com/api/COHORT-NAME/posts/5e8d1bd48829fb0017d2233b', {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${storedToken}`\n        },\n        body: JSON.stringify({\n        post: {\n            title: title,\n            description,\n            price,\n            //location: \"New York, NY\",\n            willDeliver: true\n        }\n    })\n    }).then(response => response.json())\n        .then(result => {\n        console.log(result);\n        })\n    .catch(console.error);\n} */\n\n\nexport async function deletePost(postIdToDelete, storedToken){\n    console.log('post id to delete ', postIdToDelete);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts/${postIdToDelete}`, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${storedToken}` \n        }\n        }).then(response => response.json())\n            .then(result => {\n            console.log(result);\n        })\n        .catch(console.error);\n}\n\n\nexport function makeHeader(token){\n  let temporaryHeader = {\n      'Content-Type': 'application/json'\n  }\n  if (token){\n    temporaryHeader[\"Authorization\"] = \"Bearer \" + token  \n  } \n  return temporaryHeader\n} \n\n/*export async function messagePoster(storedToken){\n    const response = await fetch('https://strangers-things.herokuapp.com/api/COHORT-NAME/posts/5e8929ddd439160017553e06/messages', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${storedToken}`\n        },\n        body: JSON.stringify({\n          message: {\n            content: \"Do you still have this?  Would you take $10 less?\"\n          }\n        })\n      }).then(response => response.json())\n        .then(result => {\n          console.log(result);\n        })\n        .catch(console.error);\n}*/\n\n","import React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { makeHeader, fetchObject } from \"../Api\";\n\n\n\n\nasync function login(userName, passWord){\n    const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/users/login', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n        user: {\n            username: userName,\n            password: passWord\n        }\n        })\n    })\n\n    const result = await response.json();\n    console.log(result.data.token);\n    const token = result.data.token;\n    localStorage.setItem(\"token\", token)\n    return token;\n\n \n}\n\nfunction register(setToken, username, password, confirmedPassword){\n    if (password !== confirmedPassword){\n        alert(\"Passwords don't match\");\n        return;\n    }\n    fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/users/register', \n        {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n            username: username,\n            password: password\n        }\n    })\n    })\n    \n    .then(response => response.json())\n    .then(result => {\n    console.log(result);\n    })\n    .catch(console.error);\n}\n\n\nconst Login = ({ setToken, match, setHeader, setUser}) => {\n    const [userName, setUserName] = useState(\"username\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n    const history = useHistory();\n    \n    return (\n        <form\n            onSubmit={async (e) => {\n                try {\n                    e.preventDefault();\n                    let newToken = null;\n                    if(match.url === \"/register\") newToken = register(userName, password, confirmedPassword);\n                    if(match.url === \"/login\") newToken = await login(userName, password); \n                    if(newToken) {\n                        const newHeader = makeHeader(newToken);\n                        const newUser = await fetchObject(newHeader);\n                        console.log(newUser);\n                        setUser(newUser);\n                        setHeader(newHeader);\n                        setToken(newToken);\n                        history.push(\"/userObject\") \n                    } \n                    console.log(userName, password, confirmedPassword)\n\n                } catch (error) {\n                    console.error(error)\n                }\n                \n            }}\n        >\n            <br />\n            <div className=\"mp-2\">\n                <label className=\"form-label\">\n                    Username\n                </label>\n                <input\n                    type=\"text\"\n                    value={userName}\n                    onChange={({target: {value}})=> setUserName(value)} \n                    className=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"your username\"\n                />    \n                \n            </div>\n            <br />\n            <div className=\"mp-2\">\n                <label className=\"form-lable\">\n                    Password\n                </label>\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={({target: {value}}) => setPassword(value)}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"\"\n                />\n            </div>\n            <br />\n            {match.url === \"/register\" ?\n            (<div className=\"mp-2\">\n                <label className=\"form-label\">\n                    Confirm Password\n                </label>\n                <input\n                    type=\"password\"\n                    onChange={({target: {value}}) => setConfirmedPassword(value)}\n                    value={confirmedPassword}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"\"\n                />\n            </div>) : null} \n            <div className=\"col-auto\">\n                <button type=\"submit\" className=\"btn btn-primary mb-3\">\n                    Submit\n                </button>\n                { \n                    match.url === \"/register\" ? \n                    <Link to=\"/login\"> Already have an account? </Link>\n                    : <Link to=\"/register\"> Don't have an account? </Link>\n                }\n            </div>\n\n\n        </form>\n    )\n\n}\n\nexport default Login;","import React, {useState, useEffect} from \"react\";\n\nimport { fetchPosts } from \"../Api\";\n\n\n\nexport default function NewPost ({headers, setPosts, posts}){\n    \n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    \n    return (\n        <div>\n            <h4>Create a new listing</h4>\n            <form onSubmit={async (event) => {\n                event.preventDefault();\n                console.log(headers)\n\n                fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts', {\n                    method: \"POST\",\n                    headers: headers,\n                    body: JSON.stringify({\n                        post: {\n                        title: title,\n                        description: description,\n                        price: price,\n                        willDeliver: true\n                    }}\n                \n                    ) \n                    })\n                    \n                    .then(response => response.json())\n                    .then((result) => {\n                        console.log(\"these \", result)\n                        setPosts(\n                            [...posts, result.data.post]\n                        )\n                    })\n                        .catch(console.error);\n\n             }}> \n        \n        <input\n            type=\"text\"\n            placeholder=\"Title\"\n            onChange={(event) => {\n                console.log(title);\n                setTitle(event.target.value);\n            }} \n            value = {title} \n            />\n        \n        <input\n            type=\"text\"\n            placeholder=\"Description\"\n            onChange={(event) => {\n                console.log(description);\n                setDescription(event.target.value);\n            }} \n            value = {description} \n            />\n\n        <input\n            type=\"text\"\n            placeholder=\"Price\"\n            onChange={(event) => {\n                console.log(price);\n                setPrice(event.target.value);\n            }} \n            value = {price} \n            />\n\n        <button type=\"submit\" >Submit</button>       \n        </form>\n    </div>\n\n)\n}\n\n","import React, {useState} from \"react\";\n\n//const [posts, setPosts] = useState([]);\n//const [searchTerm, setSearchTerm] = useState('');\n\n\nexport default ({setFilteredResults, posts}) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    function filterPosts(posts, searchTerm){\n        searchTerm = searchTerm.toLowerCase();\n        return posts.filter((post, index) => {\n            const myPostTitle = post.title.toLowerCase();\n            return myPostTitle.includes(searchTerm);\n\n        })\n    }\n\n    return (\n        <div>\n            <h4>Search</h4>\n            <input value={searchTerm} onChange={(event) => {setSearchTerm(event.target.value); const myFilteredPosts = filterPosts(posts, event.target.value); setFilteredResults(myFilteredPosts)}} placeholder=\"search\" />\n        </div>\n    );\n};\n\n\n\n\n\n\n/*function postMatches(post, text) {\n  // return true if any of the fields you want to check against include the text\n  // strings have an .includes() method \n}\n\nconst filteredPosts = posts.filter(post => postMatches(post, searchTerm));\nconst postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n// then, in our jsx below... map over postsToDisplay instead of posts */","import React, {useState, useEffect} from 'react';\n\n\nimport {fetchPosts, deletePost, findPost} from '../Api';\n\nimport NewPost from './newPost';\n\nimport Search from './Search';\n\n\n\nconst Posts = ({history, setSelectedPost, storedToken, headers, setFilteredResults, filteredResults, posts, setPosts}) => {\n    console.log(\"now these \", posts);\n \n    return (\n        <div id=\"posts\">\n            {<NewPost headers={headers} setPosts={setPosts} posts={posts}/>}\n            {<Search posts={posts} filteredResults={filteredResults} setFilteredResults={setFilteredResults}/>}\n            {<h2>Listings</h2>}\n            {filteredResults ? filteredResults.map( (post, index) => {\n                return(                    \n                    <div key={index}>                     \n                        <h3>{post.title}</h3>\n                        <h4>{post.description}</h4>\n                        <h4>{post.price}</h4>\n                        <button \n                            type=\"button\"\n                            className=\"btn btn-outline-primary\"\n                            onClick={() => deletePost(post._id, storedToken)}   //if post._id === postIdToDelete\n                            > Delete\n                        </button>\n                        <button \n                            type=\"button\"\n                            className=\"btn btn-outline-primary\"\n                            onClick={() => {\n                                const newSelectedPost = findPost(post._id, posts)\n                                setSelectedPost(newSelectedPost)\n                                history.push(\"/posts/\" + post._id) \n                            }}                                 \n                            > Post Details\n                        </button>\n                    </div>\n                )\n            } ) : null }\n\n        </div>\n    )\n\n}\n\nexport default Posts;","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link, useHistory} from 'react-router-dom'\nimport { findPost } from '../Api';\n\n\n\n\nconst SinglePost = ({selectedPost, setSelectedPost, match, posts}) => {\n    console.log(\"this is match: \", match);\n    useEffect (() => {\n        if(posts) {\n        const postId = match.params.postId;\n        const foundPost = findPost(postId, posts);\n        \n        setSelectedPost(\n            foundPost\n        );}\n    }, [posts])\n\n\n    const history = useHistory();\n\n    \n    return <div>\n        <h1> {selectedPost.title} </h1>\n        <p> {selectedPost.description} </p>\n        <h3> {selectedPost.price} </h3>\n        <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() =>{\n                console.log(\"hey it's the message button\");\n                history.push(\"/posts/sendmessage/\" + selectedPost._id)\n\n            }}\n        \n        >Message</button>\n        <button \n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() => {\n                console.log(\"hey it's the edit button\");\n                history.push(\"/posts/update/\" + selectedPost._id)\n\n            }}\n            > Edit\n        </button>\n       \n    </div>\n    \n    \n\n}\n\nexport default SinglePost;","import React, {useState, useEffect} from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\n\n//import { fetchPosts } from \"../Api\";\n\n\n\nconst UpdatePost = ({posts, setPosts, postId, setPostId, selectedPost, headers}) => {  //do what now?\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n\n    console.log(\"this is the selectedPost._id \", selectedPost._id);\n    console.log(\"this is the title after it's out of state\", title);\n    console.log(\"this is the header \", headers)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('postID: ', postId);\n        const response = await fetch(`http://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts/${selectedPost._id}`, {\n            method: \"PATCH\",\n            headers, \n            body: JSON.stringify({\n                post: {\n                title: title,\n                description: description,\n                price: price,\n                willDeliver: true}\n            })\n            \n            \n            }); \n            \n            const data = await response.json();\n            console.log('data: ', data);\n            if(data && data.title) {\n                const newPosts = posts.map(post => {\n                    if(post_id === postId) {\n                        return data;\n                    } else {\n                        return post;\n                    }\n                });\n                setPosts(newPosts);\n                setTitle('');\n                setBody('');\n                setPostId(null);\n            }\n\n    }\n\n    return <>\n        <h3>Update Post</h3>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(event) => setDescription(event.target.value)} />\n            <input type=\"text\" placeholder=\"price\" value={price} onChange={(event) => setPrice(event.target.value)} />\n            <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\n        </form>\n        </>\n\n}\n\nexport {UpdatePost};\n                \n             ","import React, {useState, useEffect} from 'react';\n\n\nconst SendMessage = ({post, posts, setPosts, postId, setPostId, selectedPost, headers}) => {\n    const [message, setMessage] = useState(\"\");\n    console.log(\"these are the headers \", headers)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts/${selectedPost._id}/messages`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify({\n              message: {\n                content: message\n              }\n            })\n        }).then(response => response.json())\n        .then(result => {\n          return result;\n        })\n        console.log(response.data);\n        return response.data;\n\n\n    }\n    \n    return <>\n        <h3>Send Message</h3>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"message\" value={message} onChange={(event) => setMessage(event.target.value)} />\n            <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\n        </form>\n        </>\n\n    }\n\n    export {SendMessage};\n\n\n    \n","import React, { useState, useEffect, useReducer } from 'react'\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport { fetchObject }  from '../Api';\n\n\n\nconst RenderUserObject = ( {user, isLoggedIn, headers, storesToken, } ) => {\n    console.log(\"This is the user: \", user);\n    //const [object, setObject] = useState(null);\n\n\n    return (\n        <div id=\"userobject\">\n\n            <h2>Hi, {user ? user.username : \"guest\"} </h2>\n            <div>\n            <Link to=\"/posts\"> Listings </Link>\n                <h2>Your Messages</h2>\n                { user && user.messages ? user.messages.map( (message) => { \n                    \n                    return <>\n                        <h3 >{ message.post.title} </h3>        {/*labels --what's the post title, whats the content, is it avaiable for delivery?*/}\n                        <p>From: { message.fromUser.username }</p>\n                        <p>{ message.content }</p>\n                        \n                    </> \n                }): null }\n            </div>\n\n            <div>\n                <h2>Your Listings</h2>\n                { user ? user.posts.map( (post) => {\n                    \n                    return <>\n                        <h3>{ post.title } </h3>\n                        <p>{ post.description }</p>\n                        <h5>{ post.price }</h5>\n                        <></>\n                        { /* post ? post.messages.map ( (message) => {\n                            return (\n                                <>\n                                    <p> From:{ message.fromUser.username }</p> \n                                    <p>{ message.content }</p>\n                                </>\n                            )\n\n                        }) : null */ }\n                        \n                    </> \n                }): null }\n\n            </div>\n    \n        </div> )\n\n}\n\nexport {RenderUserObject};\n\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport Login from './components/login';\nimport Posts from './components/posts';\nimport SinglePost from './components/singlePost';\n\n\nimport { UpdatePost } from './components/updatePost';  \n\nimport { fetchPosts, fetchObject, makeHeader } from './Api';\n\nimport { SendMessage } from './components/sendMessage';\n\nimport { RenderUserObject } from './components/userObject';\n\n\n\nconst App = () => {\n    const [token, setToken] = useState(null);\n    const [header, setHeader] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [selectedPost, setSelectedPost] = useState({})\n    const [postId, setPostId] = useState(null);\n    const [user, setUser] = useState(null);  \n\n\n    useEffect( async () => {\n        const results = await fetchPosts();\n        console.log(results);\n        setPosts(results);\n    }, [] );\n\n    const [filteredResults, setFilteredResults] = useState([]);\n    //********* */\n   \n    useEffect(() => {\n        setFilteredResults(posts);\n    }, [posts]) \n\n\n    useEffect( async () => {\n        const storedToken = localStorage.getItem(\"token\");\n        console.log(storedToken);\n        if(storedToken) {\n            setToken(storedToken);\n            const temporaryHeader = makeHeader(storedToken);\n            setHeader(temporaryHeader);\n            const currentUser = await fetchObject(temporaryHeader);\n            setUser(currentUser);\n            console.log(currentUser);\n        }\n\n    }, [])\n\n\n\n    return ( \n        <Router>\n            {!token ?\n                <Link to=\"/login\"> Login </Link>\n                : null }\n            {!token ? <Link to=\"/register\">Register</Link>\n                : null }\n            {token ? \n                <Link to=\"/login\" onClick = {() => {\n                    localStorage.removeItem(\"token\");\n                    setToken(null);\n                    setHeader(null);\n                    setUser(null);\n                    \n                }}>Logout</Link>\n                : null }\n                        \n            <Route path=\"/login\" render={(routeProps) => <Login {...routeProps} setHeader={setHeader} setToken={setToken} setUser={setUser} />}/>\n            <Route path=\"/register\" render={(routeProps) => <Login {...routeProps} setHeader={setHeader} setToken={setToken} setUser={setUser} />} />\n            <Route path=\"/posts\" exact render={(routerProps) => <Posts {...routerProps} setSelectedPost={setSelectedPost} setPosts={setPosts} posts={posts} filteredResults={filteredResults} setFilteredResults={setFilteredResults} isLoggedIn={!!token} storedToken={token} headers={header}/>} /> \n            <Route path=\"/posts/:postId\" render={(routerProps) => <SinglePost {...routerProps} selectedPost={selectedPost} setSelectedPost={setSelectedPost} posts={posts}/>}/>\n            <Route path=\"/posts/update/:postId\" render={(routerProps) => <UpdatePost {...routerProps} selectedPost={selectedPost} storedToken={token} headers={header}/>}/>\n            <Route path=\"/posts/sendmessage/:postId\" render={(routerProps) => <SendMessage {...routerProps} selectedPost={selectedPost} storedToken={token} headers={header}/>}/>\n            <Route path=\"/userobject\" render={(routerProps) => <RenderUserObject {...routerProps} user={user} isLoggedIn={!!token} storedToken={token} headers={header}/>  } />\n        </Router>\n    )\n\n}\n    \n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);"],"sourceRoot":""}