{"version":3,"sources":["Api/index.js","components/login.jsx","components/newPost.jsx","components/Search.jsx","components/posts.jsx","components/updatePost.jsx","components/sendMessage.jsx","components/singlePost.jsx","components/userObject.jsx","components/Header.jsx","index.js"],"names":["fetchObject","headers","a","fetch","then","response","json","result","catch","console","error","data","fetchPosts","posts","reverse","deletePost","postIdToDelete","storedToken","log","method","makeHeader","token","temporaryHeader","login","userName","passWord","body","JSON","stringify","user","username","password","localStorage","setItem","register","confirmedPassword","alert","Login","setToken","match","setHeader","setUser","useState","setUserName","setPassword","setConfirmedPassword","history","useHistory","className","onSubmit","e","preventDefault","newToken","url","newHeader","newUser","push","type","value","onChange","target","id","placeholder","minLength","to","NewPost","setPosts","updateMade","setUpdateMade","title","setTitle","description","setDescription","price","setPrice","event","post","willDeliver","setFilteredResults","searchTerm","setSearchTerm","myFilteredPosts","toLowerCase","filter","index","includes","filterPosts","Posts","filteredResults","Search","map","date","createdAt","substr","_id","UpdatePost","postId","setPostId","currentPost","setCurrentPost","setShowUpdate","setUpdateSuccess","useEffect","handleSubmit","SendMessage","message","setMessage","params","content","SinglePost","updateSuccess","showUpdate","find","item","dateReturned","length","author","onClick","Authorization","split","RenderUserObject","isLoggedIn","messages","fromUser","active","Header","Navbar","fixed","bg","expand","collapseOnSelect","Container","Brand","href","Toggle","Collapse","Nav","Link","removeItem","App","header","results","getItem","currentUser","path","render","routeProps","exact","routerProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4202b212.chunk.js","sourcesContent":["export async function fetchObject(headers){\n    const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/users/me', {\n        headers,\n      }).then(response => response.json())\n        .then(result => {\n          return result;\n        })\n        .catch(console.error);\n        return response.data;\n}\n\n\nexport async function fetchPosts(){\n    try{\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts');\n        const result = await response.json();\n        return result.data.posts.reverse();\n    } catch (error){\n        console.error(error);\n    }\n}\n\n\nexport function findPost(postId, posts){\n    console.log(\"this is the \", postId)\n    const myPost = posts.find(post => post._id === postId);\n    //return posts.find(post => post._id === postId);\n    console.log(\"This is \", myPost);\n    return myPost ? myPost : {}\n}\n\n/*export async function editPost(postIdToEdit, storedToken){\n    console.log('post id to edit', postIdToEdit);\n    const response = await fetch('http://strangers-things.herokuapp.com/api/COHORT-NAME/posts/5e8d1bd48829fb0017d2233b', {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${storedToken}`\n        },\n        body: JSON.stringify({\n        post: {\n            title: title,\n            description,\n            price,\n            //location: \"New York, NY\",\n            willDeliver: true\n        }\n    })\n    }).then(response => response.json())\n        .then(result => {\n        console.log(result);\n        })\n    .catch(console.error);\n} */\n\n\nexport async function deletePost(postIdToDelete, storedToken){\n    console.log('post id to delete ', postIdToDelete);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts/${postIdToDelete}`, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${storedToken}` \n        }\n        }).then(response => response.json())\n            .then(result => {\n            console.log(result);\n        })\n        .catch(console.error);\n}\n\n\nexport function makeHeader(token){\n  let temporaryHeader = {\n      'Content-Type': 'application/json'\n  }\n  if (token){\n    temporaryHeader[\"Authorization\"] = \"Bearer \" + token  \n  } \n  return temporaryHeader\n} \n\n/*export async function messagePoster(storedToken){\n    const response = await fetch('https://strangers-things.herokuapp.com/api/COHORT-NAME/posts/5e8929ddd439160017553e06/messages', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${storedToken}`\n        },\n        body: JSON.stringify({\n          message: {\n            content: \"Do you still have this?  Would you take $10 less?\"\n          }\n        })\n      }).then(response => response.json())\n        .then(result => {\n          console.log(result);\n        })\n        .catch(console.error);\n}*/\n\n","import React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { makeHeader, fetchObject } from \"../Api\";\n\n\n\n\nasync function login(userName, passWord){\n    const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/users/login', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n        user: {\n            username: userName,\n            password: passWord\n        }\n        })\n    })\n\n    const result = await response.json();\n    console.log(result.data.token);\n    const token = result.data.token;\n    localStorage.setItem(\"token\", token)\n    return token;\n\n \n}\n\nfunction register(username, password, confirmedPassword){\n    if (password !== confirmedPassword){\n        alert(\"Passwords don't match\");\n        return;\n    }\n    const registerToken = fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/users/register', \n        {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n            username: username,\n            password: password\n        }\n    })\n    })\n    \n    .then(response => response.json())\n    .then(result => {\n    return result.data.token;\n    })\n    .catch(console.error);\n    return registerToken;\n}\n\n\nconst Login = ({ setToken, match, setHeader, setUser}) => {\n    const [userName, setUserName] = useState(\"username\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n    const history = useHistory();\n    \n    return (\n        <form className='Route-container'\n            onSubmit={async (e) => {\n                try {\n                    e.preventDefault();\n                    let newToken = null;\n                    if(match.url === \"/register\") newToken = await register(userName, password, confirmedPassword);\n                    if(match.url === \"/login\") newToken = await login(userName, password); \n                    if(newToken) {\n                        const newHeader = makeHeader(newToken);\n                        const newUser = await fetchObject(newHeader);\n                        console.log(newUser);\n                        setUser(newUser);\n                        setHeader(newHeader);\n                        setToken(newToken);\n                        history.push(\"/userObject\") \n                    } \n                    console.log(userName, password, confirmedPassword)\n\n                } catch (error) {\n                    console.error(error)\n                }\n                \n            }}\n        >\n            <br />\n            <div className=\"mp-2\">\n                <label className=\"form-label\">\n                    Username\n                </label>\n                <input\n                    type=\"text\"\n                    value={userName}\n                    onChange={({target: {value}})=> setUserName(value)} \n                    className=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"your username\"\n                />    \n                \n            </div>\n            <br />\n            <div className=\"mp-2\">\n                <label className=\"form-lable\">\n                    Password\n                </label>\n                <input\n                    type=\"password\"\n                    value={password}\n                    minLength=\"6\"\n                    onChange={({target: {value}}) => setPassword(value)}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"\"\n                />\n            </div>\n            <br />\n            {match.url === \"/register\" ?\n            (<div className=\"mp-2\">\n                <label className=\"form-label\">\n                    Confirm Password\n                </label>\n                <input\n                    type=\"password\"\n                    onChange={({target: {value}}) => setConfirmedPassword(value)}\n                    value={confirmedPassword}\n                    className=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"\"\n                />\n            </div>) : null} \n            <div className=\"col-auto\">\n                <button type=\"submit\" className=\"btn btn-primary mb-3\">\n                    Submit\n                </button>\n                { \n                    match.url === \"/register\" ? \n                    <Link to=\"/login\"> Already have an account? </Link>\n                    : <Link to=\"/register\"> Don't have an account? </Link>\n                }\n            </div>\n\n\n        </form>\n    )\n\n}\n\nexport default Login;","import React, {useState, useEffect} from \"react\";\n\nimport { fetchPosts } from \"../Api\";\n\nexport default function NewPost ({headers, setPosts, posts, user, updateMade, setUpdateMade}){\n    \n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    \n    return (\n        <div>\n            { user && <h4>Create a new listing</h4>}\n            { user && <form onSubmit={async (event) => {\n                event.preventDefault();\n                console.log(headers)\n\n                fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts', {\n                    method: \"POST\",\n                    headers: headers,\n                    body: JSON.stringify({\n                        post: {\n                        title: title,\n                        description: description,\n                        price: price,\n                        willDeliver: true\n                    }}\n                \n                    ) \n                    })\n                    \n                    .then(response => response.json())\n                    .then((result) => {\n               \n                        setUpdateMade(updateMade + 1);\n                        // let updatedPosts = [...posts];\n                        // updatedPosts.unshift(result.data.post)\n                        // setPosts(\n                        //     updatedPosts\n                        // )\n                    })\n                        .catch(console.error);\n\n             }}> \n        \n        <input\n            type=\"text\"\n            placeholder=\"Title\"\n            onChange={(event) => {\n                console.log(title);\n                setTitle(event.target.value);\n            }} \n            value = {title} \n            />\n        \n        <input\n            type=\"text\"\n            placeholder=\"Description\"\n            onChange={(event) => {\n                console.log(description);\n                setDescription(event.target.value);\n            }} \n            value = {description} \n            />\n\n        <input\n            type=\"text\"\n            placeholder=\"Price\"\n            onChange={(event) => {\n                console.log(price);\n                setPrice(event.target.value);\n            }} \n            value = {price} \n            />\n\n        <button type=\"submit\" >Submit</button>       \n        </form>}\n    </div>\n\n)\n}\n\n","import React, {useState} from \"react\";\n\n//const [posts, setPosts] = useState([]);\n//const [searchTerm, setSearchTerm] = useState('');\n\n\nexport default ({setFilteredResults, posts}) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    function filterPosts(posts, searchTerm){\n        searchTerm = searchTerm.toLowerCase();\n        return posts.filter((post, index) => {\n            const myPostTitle = post.title.toLowerCase();\n            return myPostTitle.includes(searchTerm);\n\n        })\n    }\n\n    return (\n        <div>\n            <h4>Search</h4>\n            <input value={searchTerm} onChange={(event) => {setSearchTerm(event.target.value); const myFilteredPosts = filterPosts(posts, event.target.value); setFilteredResults(myFilteredPosts)}} placeholder=\"search\" />\n        </div>\n    );\n};\n\n\n\n\n\n\n/*function postMatches(post, text) {\n  // return true if any of the fields you want to check against include the text\n  // strings have an .includes() method \n}\n\nconst filteredPosts = posts.filter(post => postMatches(post, searchTerm));\nconst postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n// then, in our jsx below... map over postsToDisplay instead of posts */","import React, {useState, useEffect} from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport {fetchPosts, deletePost, findPost} from '../Api';\n\nimport NewPost from './newPost';\n\nimport Search from './Search';\n\n\nconst Posts = ({history, updateMade, setUpdateMade, storedToken, headers, setFilteredResults, filteredResults, user, posts, setPosts}) => {\n    console.log(\"now these \", posts);\n \n    return (\n        <div id=\"posts\" className='Route-container'>\n            {<NewPost headers={headers} updateMade={updateMade} setUpdateMade={setUpdateMade} setPosts={setPosts} posts={posts} user={user}/>}\n            {<Search posts={posts} filteredResults={filteredResults} setFilteredResults={setFilteredResults}/>}\n            <div className='Posts-container'>\n {              filteredResults ? filteredResults.map( (post, index) => {\n\n                let date = post.createdAt.substr(0, 10);\n\n                return(                  \n                    <div className='Single-post' key={index}>                     \n                        <div>\n                            <h3>{post.title}</h3>\n                            <p>{post.description}</p>\n                            <h4>{post.price}</h4> \n                            <h6>Posted {date}</h6>\n                        </div>\n                     <div className='Details-button'>      \n                        <Link to={`/posts/${post._id}`}><button \n                            type=\"button\"\n                            className=\"btn btn-outline-primary\"\n\n                            // onClick={() => {\n                            //     const newSelectedPost = findPost(post._id, posts)\n                            //     setSelectedPost(newSelectedPost)\n                            //     history.push(\"/posts/\" + post._id) \n                            // }}                                 \n                            > Post Details\n                        </button></Link>\n\n                     </div>\n                        \n                    </div>\n                )\n            } ) : null }\n\n            </div>\n           \n\n        </div>\n    )\n\n}\n\nexport default Posts;","import React, {useState, useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst UpdatePost = ({posts, setPosts, postId, setPostId, updateMade, setUpdateMade, currentPost, setCurrentPost, headers, setShowUpdate, setUpdateSuccess}) => {  \n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        console.log(\"update post rendered\")\n\n    }, [])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const response = await fetch(`http://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts/${postId}`, {\n            method: \"PATCH\",\n            headers, \n            body: JSON.stringify({\n                post: {\n                title: title,\n                description: description,\n                price: price,\n                willDeliver: true}\n            })\n            }); \n\n            const {data} = await response.json();\n            console.log('update data: ', data);\n            if(data && data.post.title) {\n                // const newPosts = posts.map(post => {\n                //     if(post._id === postId) {\n                //         return data;\n                //     } else {\n                //         return post;\n                //     }\n                //});\n                //setPosts(newPosts);\n                setUpdateSuccess(true);\n                setUpdateMade(updateMade + 1);\n                setTitle('');\n                setDescription('');\n                setShowUpdate(false);\n                //setPostId(null);\n                // setCurrentPost(data);\n                history.push('/');\n\n            }\n\n    }\n\n    return <>\n        <h3>Update Post</h3>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(event) => setDescription(event.target.value)} />\n            <input type=\"text\" placeholder=\"price\" value={price} onChange={(event) => setPrice(event.target.value)} />\n            <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\n        </form>\n        </>\n\n}\n\nexport {UpdatePost};\n                \n             ","import React, {useState, useEffect} from 'react';\n\n\nconst SendMessage = ({post, posts, setPosts, match, headers}) => {\n    const [message, setMessage] = useState(\"\");\n    console.log(\"these are the headers \", headers)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts/${match.params.postId}/messages`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify({\n              message: {\n                content: message\n              }\n            })\n        }).then(response => response.json())\n        .then(result => {\n          return result;\n        })\n        console.log(response.data);\n        return response.data;\n\n\n    }\n    \n    return <div className='Route-container'>\n        <h3>Send Message</h3>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"message\" value={message} onChange={(event) => setMessage(event.target.value)} />\n            <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\n        </form>\n        </div>\n\n    }\n\n    export {SendMessage};\n\n\n    \n","import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link, useHistory} from 'react-router-dom'\nimport { findPost } from '../Api';\nimport { UpdatePost } from './updatePost';\nimport { deletePost, fetchPosts } from '../Api';\nimport { SendMessage } from './sendMessage';\n\n\n\n\nconst SinglePost = ({ match, updateMade, setUpdateMade, post, posts, setPosts, headers, updateSuccess, setUpdateSuccess, user}) => {\n    const [showUpdate, setShowUpdate] = useState(false)\n    // const [currentPost, setCurrentPost]= useState({})\n    const currentPost = posts.find(item => item._id === match.params.postId)\n\n    console.log(\"CURRENT POST, \", posts.find(item => item._id === match.params.postId));\n    // debugger;\n    // useEffect (() => {\n    //     if(posts) {\n    //         console.log(\"USEEFFECT RERENDER, \", posts)\n    //         setCurrentPost(posts.find(item => item._id === match.params.postId))\n    //     //     console.log(\"These are the posts, \", posts)\n    //     // const postId = match.params.postId;\n    //     // const foundPost = findPost(postId, posts);\n    //     // console.log(\"THIS IS THE FOUND POST, \", foundPost);\n    //     // // setcurrentPost(\n    //     // //     foundPost\n    //     // // )\n    //     ;}\n    // }, [match.params.postId, updateSuccess ])\n\n    const history = useHistory();\n    \n    console.log(\"POSTS AND CURRENT POST, \", posts, currentPost)\n    // debugger;\n\n    \n    let dateReturned = currentPost.createdAt.substr(0, 10);\n    console.log(\"THIS IS THE DATE RETURNED, \", dateReturned);\n    \n\n    return <div className='Single-post-render'>\n        \n        { posts.length > 0 && <>\n        {console.log(\"CURRENT POST WITHIN RENDER, \", currentPost)}\n        <h1> {currentPost.title} </h1>\n        <p> {currentPost.description} </p>\n        <h3> {currentPost.price} </h3>\n        <h6> Posted {dateReturned} </h6>\n        { user && currentPost && currentPost.author && user._id !== currentPost.author._id && <Link to={`/posts/sendmessage/${currentPost._id}`}><button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n    \n            // onClick={() =>{\n            //     history.push(\"/posts/sendmessage/\" + currentPost._id)\n\n            // }}\n            // onClick={ async () => {\n            //     SendMessage(currentPost._id);\n            //     history.push(\"/posts/sendmessage/\" + currentPost._id)\n            // }}\n        \n        >Message</button> </Link>}\n\n        { user && currentPost && currentPost.author && user._id === currentPost.author._id && <button \n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() => {\n                //history.push(\"/posts/update/\" + currentPost._id)\n                setShowUpdate(true)\n            }}\n            > Edit\n        </button>}\n\n        { user && currentPost && currentPost.author && user._id === currentPost.author._id && <button \n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={ async () =>  {\n                await deletePost(currentPost._id, headers.Authorization.split(\" \")[1]);\n                setUpdateMade(updateMade + 1);\n                // const postsDeletedPost = await fetchPosts();\n                // setPosts(postsDeletedPost);\n                history.push('/')\n\n            }}\n            > Delete\n        </button>}\n\n        {showUpdate && <UpdatePost setShowUpdate = {setShowUpdate} updateMade={updateMade} setUpdateMade={setUpdateMade} /* currentPost={currentPost}*/ postId = {match.params.postId} setPosts={setPosts} headers={headers} setUpdateSuccess={setUpdateSuccess}/>}\n       \n        </>\n\n        }\n       \n    </div>\n    \n    \n\n}\n\nexport default SinglePost;","import React, { useState, useEffect, useReducer } from 'react'\nimport ReactDOM from 'react-dom';\nimport { Link, Redirect, useHistory} from 'react-router-dom';\n\nimport { fetchObject }  from '../Api';\n\nimport { deletePost, fetchPosts } from '../Api';\n\nimport { findPost } from '../Api';\n\n//selectedPost && selectedPost.author && user._id\n\n\nconst RenderUserObject = ( {user, isLoggedIn, headers, post, posts, setPosts, storedToken, setUser } ) => {\n\n    const history = useHistory();\n\n    return (\n        <>\n       {!storedToken ? <Redirect to=\"/\"/> : (\n            <div id=\"userobject\" className='Route-container'>\n            <h5>Hi, {user ? user.username : \"guest\"} </h5>\n            <div>\n                <h4>Your Messages</h4>\n                <div className='Messages-container'>\n                  { user && user.messages ? user.messages.map( (message) => { \n                    \n                    return <>\n                        <div className='Single-message'> \n                            <h4 >{ message.post.title} </h4>        \n                            <p>From: { message.fromUser.username }</p>\n                            <p>{ message.content }</p> \n                        </div>\n                \n                    </> \n                }): null }  \n                </div>\n                \n            </div>\n            <div>\n                <h4>Your Listings</h4>\n                <div className='User-posts-container'>\n                  { user ? user.posts.filter(post => post.active === true).map( (post) => {\n                    return <>\n                        <div className='User-single-post'>   \n                        <h4>{ post.title } </h4>\n                        <p>{ post.description }</p>\n                        <h5>{ post.price }</h5>\n                        <div className='Details-button'>      \n                        <button \n                            type=\"button\"\n                            className=\"btn btn-outline-primary\"\n                            // onClick={() => {\n                            //     const newSelectedPost = findPost(post._id, user.posts)\n                            //     console.log(\"this is the new selected post, \", newSelectedPost);\n                            //     setSelectedPost(newSelectedPost);\n                            //     history.push(\"/posts/\" + post._id)\n                                 \n                            // }}                                 \n                            > <Link to={`/posts/${post._id}`}>Post Details</Link>\n                        </button>\n                        </div>\n\n                    \n                        \n                        </div>\n                        \n                    </> \n                    }): null }\n\n                </div>\n              \n            </div>\n        </div>\n       )}\n        </>\n    )\n}\n\nexport {RenderUserObject};\n\n","import React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({token, setToken, setHeader, setUser}) => {\n    const logout = () => {\n        localStorage.removeItem(\"token\");\n        setToken(null);\n        //setHeader(null);\n        setUser(null);\n    }\n\n    return (\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\"  background-color=\"#fafcfc\" collapseOnSelect>\n        <Container>\n          <Navbar.Brand href=\"/\">Strangers' Things</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link ><Link to=\"/\">Listings</Link></Nav.Link> \n              {!token ? (\n                <>\n                <Nav.Link ><Link to=\"/login\">Login</Link></Nav.Link>\n                <Nav.Link ><Link to=\"/register\">Register</Link></Nav.Link>\n                </>\n              ) : (\n                <>\n                <Nav.Link ><Link to=\"/userObject\">Dashboard</Link></Nav.Link>\n                <Nav.Link onClick = {logout}>Logout</Nav.Link>\n                </>\n              )\n              }\n            \n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n}\n\nexport default Header\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\n\nimport Login from './components/login';\nimport Posts from './components/posts';\nimport SinglePost from './components/singlePost';\n\n\nimport { UpdatePost } from './components/updatePost';  \n\nimport { fetchPosts, fetchObject, makeHeader } from './Api';\n\nimport { SendMessage } from './components/sendMessage';\n\nimport { RenderUserObject } from './components/userObject';\n\nimport Header from './components/Header';\n\n\nconst App = () => {\n    const [token, setToken] = useState(null);\n    const [header, setHeader] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [postId, setPostId] = useState(null);\n    const [user, setUser] = useState(null);  \n    const [updateSuccess, setUpdateSuccess] = useState(false);\n    const [filteredResults, setFilteredResults] = useState([]);\n    const [updateMade, setUpdateMade] = useState(0);\n\n\n    useEffect( async () => {\n        const results = await fetchPosts();\n   \n        setPosts(results);\n        setFilteredResults(results);\n    }, [updateSuccess, updateMade] );\n\n    \n\n    // useEffect(() => {\n    //     setFilteredResults(posts);\n    // }, [posts]) \n\n\n    useEffect( async () => {\n        const storedToken = localStorage.getItem(\"token\");\n        if(storedToken) {\n            setToken(storedToken);\n            const temporaryHeader = makeHeader(storedToken);\n            setHeader(temporaryHeader);\n            const currentUser = await fetchObject(temporaryHeader);\n            setUser(currentUser);\n        }\n\n    }, [updateMade])\n\n\n\n    return ( \n        <Router>\n            {/* {!token ?\n                <Link to=\"/login\"> Login </Link>\n                : null }\n            {!token ? <Link to=\"/register\">Register</Link>\n                : null }\n            {token ? \n                <Link to=\"/login\" onClick = {() => {\n                    localStorage.removeItem(\"token\");\n                    setToken(null);\n                    setHeader(null);\n                    setUser(null);\n                    \n                }}>Logout</Link>\n                : null } */}\n            \n            <Header token={token} setToken={setToken} setUser={setUser}/>\n            <div className='Routes'>\n                <Route path=\"/login\" render={(routeProps) => <Login {...routeProps} setHeader={setHeader} setToken={setToken} setUser={setUser} />}/>\n                <Route path=\"/register\" render={(routeProps) => <Login {...routeProps} setHeader={setHeader} setToken={setToken} setUser={setUser} />} />\n                <Route path=\"/\" exact render={(routerProps) => <Posts {...routerProps} updateMade={updateMade} setUpdateMade={setUpdateMade} setPosts={setPosts} posts={posts} user={user} filteredResults={filteredResults} setFilteredResults={setFilteredResults} isLoggedIn={!!token} storedToken={token} headers={header}/>} /> \n                <Route path=\"/posts/:postId\" render={(routerProps) => <SinglePost {...routerProps} updateMade={updateMade} setUpdateMade={setUpdateMade} posts={posts} setPosts={setPosts} headers={header} user={user} updateSuccess={updateSuccess} setUpdateSuccess={setUpdateSuccess}/>} />\n                <Route path=\"/posts/sendmessage/:postId\" render={(routerProps) => <SendMessage {...routerProps} storedToken={token} headers={header}/>}/>\n                <Route path=\"/userobject\" render={(routerProps) => <RenderUserObject {...routerProps} user={user} posts={posts} setPosts={setPosts} setUser={setUser} setPosts={setPosts} isLoggedIn={!!token} storedToken={token} headers={header}/>  } />\n\n            </div>\n   \n        </Router>\n    )\n\n}\n    \n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);"],"sourceRoot":""}